// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract Verifier {
    function verify(
        uint256[] memory pubInputs,
        bytes memory proof
    ) public view returns (bool) {
        bool success = true;
        bytes32[810] memory transcript;
        assembly {
                    let f_p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    let f_q := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
                    function validate_ec_point(x, y) -> valid {
                        {
                            let x_lt_p := lt(x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            let y_lt_p := lt(y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            valid := and(x_lt_p, y_lt_p)
                        }
                        {
                            let y_square := mulmod(y, y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            let x_square := mulmod(x, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            let x_cube := mulmod(x_square, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            let x_cube_plus_3 := addmod(x_cube, 3, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)
                            let is_affine := eq(x_cube_plus_3, y_square)
                            valid := and(valid, is_affine)
                        }
                    }
                    mstore(add(transcript, 0x20), mod(mload(add(pubInputs, 0x20)), f_q))
mstore(add(transcript, 0x40), mod(mload(add(pubInputs, 0x40)), f_q))
mstore(add(transcript, 0x60), mod(mload(add(pubInputs, 0x60)), f_q))
mstore(add(transcript, 0x80), mod(mload(add(pubInputs, 0x80)), f_q))
mstore(add(transcript, 0xa0), mod(mload(add(pubInputs, 0xa0)), f_q))
mstore(add(transcript, 0xc0), mod(mload(add(pubInputs, 0xc0)), f_q))
mstore(add(transcript, 0x0), 21050402213706393603037844648106585004354705668510617268821836230398729497718)

        {
            let x := mload(add(proof, 0x20))
            mstore(add(transcript, 0xe0), x)
            let y := mload(add(proof, 0x40))
            mstore(add(transcript, 0x100), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x60))
            mstore(add(transcript, 0x120), x)
            let y := mload(add(proof, 0x80))
            mstore(add(transcript, 0x140), y)
            success := and(validate_ec_point(x, y), success)
        }
mstore(add(transcript, 0x160), keccak256(add(transcript, 0x0), 352))
{
            let hash := mload(add(transcript, 0x160))
            mstore(add(transcript, 0x180), mod(hash, f_q))
            mstore(add(transcript, 0x1a0), hash)
        }

        {
            let x := mload(add(proof, 0xa0))
            mstore(add(transcript, 0x1c0), x)
            let y := mload(add(proof, 0xc0))
            mstore(add(transcript, 0x1e0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0xe0))
            mstore(add(transcript, 0x200), x)
            let y := mload(add(proof, 0x100))
            mstore(add(transcript, 0x220), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x120))
            mstore(add(transcript, 0x240), x)
            let y := mload(add(proof, 0x140))
            mstore(add(transcript, 0x260), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x160))
            mstore(add(transcript, 0x280), x)
            let y := mload(add(proof, 0x180))
            mstore(add(transcript, 0x2a0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x1a0))
            mstore(add(transcript, 0x2c0), x)
            let y := mload(add(proof, 0x1c0))
            mstore(add(transcript, 0x2e0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x1e0))
            mstore(add(transcript, 0x300), x)
            let y := mload(add(proof, 0x200))
            mstore(add(transcript, 0x320), y)
            success := and(validate_ec_point(x, y), success)
        }
mstore(add(transcript, 0x340), keccak256(add(transcript, 0x1a0), 416))
{
            let hash := mload(add(transcript, 0x340))
            mstore(add(transcript, 0x360), mod(hash, f_q))
            mstore(add(transcript, 0x380), hash)
        }
mstore8(add(transcript, 0x3a0), 1)
mstore(add(transcript, 0x3a0), keccak256(add(transcript, 0x380), 33))
{
            let hash := mload(add(transcript, 0x3a0))
            mstore(add(transcript, 0x3c0), mod(hash, f_q))
            mstore(add(transcript, 0x3e0), hash)
        }

        {
            let x := mload(add(proof, 0x220))
            mstore(add(transcript, 0x400), x)
            let y := mload(add(proof, 0x240))
            mstore(add(transcript, 0x420), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x260))
            mstore(add(transcript, 0x440), x)
            let y := mload(add(proof, 0x280))
            mstore(add(transcript, 0x460), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x2a0))
            mstore(add(transcript, 0x480), x)
            let y := mload(add(proof, 0x2c0))
            mstore(add(transcript, 0x4a0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x2e0))
            mstore(add(transcript, 0x4c0), x)
            let y := mload(add(proof, 0x300))
            mstore(add(transcript, 0x4e0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x320))
            mstore(add(transcript, 0x500), x)
            let y := mload(add(proof, 0x340))
            mstore(add(transcript, 0x520), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x360))
            mstore(add(transcript, 0x540), x)
            let y := mload(add(proof, 0x380))
            mstore(add(transcript, 0x560), y)
            success := and(validate_ec_point(x, y), success)
        }
mstore(add(transcript, 0x580), keccak256(add(transcript, 0x3e0), 416))
{
            let hash := mload(add(transcript, 0x580))
            mstore(add(transcript, 0x5a0), mod(hash, f_q))
            mstore(add(transcript, 0x5c0), hash)
        }

        {
            let x := mload(add(proof, 0x3a0))
            mstore(add(transcript, 0x5e0), x)
            let y := mload(add(proof, 0x3c0))
            mstore(add(transcript, 0x600), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x3e0))
            mstore(add(transcript, 0x620), x)
            let y := mload(add(proof, 0x400))
            mstore(add(transcript, 0x640), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x420))
            mstore(add(transcript, 0x660), x)
            let y := mload(add(proof, 0x440))
            mstore(add(transcript, 0x680), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x460))
            mstore(add(transcript, 0x6a0), x)
            let y := mload(add(proof, 0x480))
            mstore(add(transcript, 0x6c0), y)
            success := and(validate_ec_point(x, y), success)
        }
mstore(add(transcript, 0x6e0), keccak256(add(transcript, 0x5c0), 288))
{
            let hash := mload(add(transcript, 0x6e0))
            mstore(add(transcript, 0x700), mod(hash, f_q))
            mstore(add(transcript, 0x720), hash)
        }
mstore(add(transcript, 0x740), mod(mload(add(proof, 0x4a0)), f_q))
mstore(add(transcript, 0x760), mod(mload(add(proof, 0x4c0)), f_q))
mstore(add(transcript, 0x780), mod(mload(add(proof, 0x4e0)), f_q))
mstore(add(transcript, 0x7a0), mod(mload(add(proof, 0x500)), f_q))
mstore(add(transcript, 0x7c0), mod(mload(add(proof, 0x520)), f_q))
mstore(add(transcript, 0x7e0), mod(mload(add(proof, 0x540)), f_q))
mstore(add(transcript, 0x800), mod(mload(add(proof, 0x560)), f_q))
mstore(add(transcript, 0x820), mod(mload(add(proof, 0x580)), f_q))
mstore(add(transcript, 0x840), mod(mload(add(proof, 0x5a0)), f_q))
mstore(add(transcript, 0x860), mod(mload(add(proof, 0x5c0)), f_q))
mstore(add(transcript, 0x880), mod(mload(add(proof, 0x5e0)), f_q))
mstore(add(transcript, 0x8a0), mod(mload(add(proof, 0x600)), f_q))
mstore(add(transcript, 0x8c0), mod(mload(add(proof, 0x620)), f_q))
mstore(add(transcript, 0x8e0), mod(mload(add(proof, 0x640)), f_q))
mstore(add(transcript, 0x900), mod(mload(add(proof, 0x660)), f_q))
mstore(add(transcript, 0x920), mod(mload(add(proof, 0x680)), f_q))
mstore(add(transcript, 0x940), mod(mload(add(proof, 0x6a0)), f_q))
mstore(add(transcript, 0x960), mod(mload(add(proof, 0x6c0)), f_q))
mstore(add(transcript, 0x980), mod(mload(add(proof, 0x6e0)), f_q))
mstore(add(transcript, 0x9a0), mod(mload(add(proof, 0x700)), f_q))
mstore(add(transcript, 0x9c0), mod(mload(add(proof, 0x720)), f_q))
mstore(add(transcript, 0x9e0), mod(mload(add(proof, 0x740)), f_q))
mstore(add(transcript, 0xa00), mod(mload(add(proof, 0x760)), f_q))
mstore(add(transcript, 0xa20), mod(mload(add(proof, 0x780)), f_q))
mstore(add(transcript, 0xa40), mod(mload(add(proof, 0x7a0)), f_q))
mstore(add(transcript, 0xa60), mod(mload(add(proof, 0x7c0)), f_q))
mstore(add(transcript, 0xa80), mod(mload(add(proof, 0x7e0)), f_q))
mstore(add(transcript, 0xaa0), mod(mload(add(proof, 0x800)), f_q))
mstore(add(transcript, 0xac0), mod(mload(add(proof, 0x820)), f_q))
mstore(add(transcript, 0xae0), mod(mload(add(proof, 0x840)), f_q))
mstore(add(transcript, 0xb00), mod(mload(add(proof, 0x860)), f_q))
mstore(add(transcript, 0xb20), mod(mload(add(proof, 0x880)), f_q))
mstore(add(transcript, 0xb40), mod(mload(add(proof, 0x8a0)), f_q))
mstore(add(transcript, 0xb60), mod(mload(add(proof, 0x8c0)), f_q))
mstore(add(transcript, 0xb80), mod(mload(add(proof, 0x8e0)), f_q))
mstore(add(transcript, 0xba0), keccak256(add(transcript, 0x720), 1152))
{
            let hash := mload(add(transcript, 0xba0))
            mstore(add(transcript, 0xbc0), mod(hash, f_q))
            mstore(add(transcript, 0xbe0), hash)
        }

        {
            let x := mload(add(proof, 0x900))
            mstore(add(transcript, 0xc00), x)
            let y := mload(add(proof, 0x920))
            mstore(add(transcript, 0xc20), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x940))
            mstore(add(transcript, 0xc40), x)
            let y := mload(add(proof, 0x960))
            mstore(add(transcript, 0xc60), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x980))
            mstore(add(transcript, 0xc80), x)
            let y := mload(add(proof, 0x9a0))
            mstore(add(transcript, 0xca0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0x9c0))
            mstore(add(transcript, 0xcc0), x)
            let y := mload(add(proof, 0x9e0))
            mstore(add(transcript, 0xce0), y)
            success := and(validate_ec_point(x, y), success)
        }

        {
            let x := mload(add(proof, 0xa00))
            mstore(add(transcript, 0xd00), x)
            let y := mload(add(proof, 0xa20))
            mstore(add(transcript, 0xd20), y)
            success := and(validate_ec_point(x, y), success)
        }
mstore(add(transcript, 0xd40), keccak256(add(transcript, 0xbe0), 352))
{
            let hash := mload(add(transcript, 0xd40))
            mstore(add(transcript, 0xd60), mod(hash, f_q))
            mstore(add(transcript, 0xd80), hash)
        }
mstore(add(transcript, 0xda0), mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0xdc0), mulmod(mload(add(transcript, 0xda0)), mload(add(transcript, 0xda0)), f_q))
mstore(add(transcript, 0xde0), mulmod(mload(add(transcript, 0xdc0)), mload(add(transcript, 0xdc0)), f_q))
mstore(add(transcript, 0xe00), mulmod(mload(add(transcript, 0xde0)), mload(add(transcript, 0xde0)), f_q))
mstore(add(transcript, 0xe20), mulmod(mload(add(transcript, 0xe00)), mload(add(transcript, 0xe00)), f_q))
mstore(add(transcript, 0xe40), mulmod(mload(add(transcript, 0xe20)), mload(add(transcript, 0xe20)), f_q))
mstore(add(transcript, 0xe60), mulmod(mload(add(transcript, 0xe40)), mload(add(transcript, 0xe40)), f_q))
mstore(add(transcript, 0xe80), mulmod(mload(add(transcript, 0xe60)), mload(add(transcript, 0xe60)), f_q))
mstore(add(transcript, 0xea0), mulmod(mload(add(transcript, 0xe80)), mload(add(transcript, 0xe80)), f_q))
mstore(add(transcript, 0xec0), mulmod(mload(add(transcript, 0xea0)), mload(add(transcript, 0xea0)), f_q))
mstore(add(transcript, 0xee0), mulmod(mload(add(transcript, 0xec0)), mload(add(transcript, 0xec0)), f_q))
mstore(add(transcript, 0xf00), mulmod(mload(add(transcript, 0xee0)), mload(add(transcript, 0xee0)), f_q))
mstore(add(transcript, 0xf20), mulmod(mload(add(transcript, 0xf00)), mload(add(transcript, 0xf00)), f_q))
mstore(add(transcript, 0xf40), mulmod(mload(add(transcript, 0xf20)), mload(add(transcript, 0xf20)), f_q))
mstore(add(transcript, 0xf60), mulmod(mload(add(transcript, 0xf40)), mload(add(transcript, 0xf40)), f_q))
mstore(add(transcript, 0xf80), mulmod(mload(add(transcript, 0xf60)), mload(add(transcript, 0xf60)), f_q))
mstore(add(transcript, 0xfa0), mulmod(mload(add(transcript, 0xf80)), mload(add(transcript, 0xf80)), f_q))
mstore(add(transcript, 0xfc0), addmod(mload(add(transcript, 0xfa0)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))
mstore(add(transcript, 0xfe0), mulmod(mload(add(transcript, 0xfc0)), 21888075877798810139885396174900942254113179552665176677420557563313886988289, f_q))
mstore(add(transcript, 0x1000), mulmod(mload(add(transcript, 0xfe0)), 18801136258871406524726641978934912926273987048785013233465874845411408769764, f_q))
mstore(add(transcript, 0x1020), addmod(mload(add(transcript, 0x700)), 3087106612967868697519763766322362162274377351631021110232329341164399725853, f_q))
mstore(add(transcript, 0x1040), mulmod(mload(add(transcript, 0xfe0)), 13137266746974929847674828718073699700748973485900204084410541910719500618841, f_q))
mstore(add(transcript, 0x1060), addmod(mload(add(transcript, 0x700)), 8750976124864345374571577027183575387799390914515830259287662275856307876776, f_q))
mstore(add(transcript, 0x1080), mulmod(mload(add(transcript, 0xfe0)), 14204982954615820785730815556166377574172276341958019443243371773666809943588, f_q))
mstore(add(transcript, 0x10a0), addmod(mload(add(transcript, 0x700)), 7683259917223454436515590189090897514376088058458014900454832412908998552029, f_q))
mstore(add(transcript, 0x10c0), mulmod(mload(add(transcript, 0xfe0)), 9798514389911400568976296423560720718971335345616984532185711118739339214189, f_q))
mstore(add(transcript, 0x10e0), addmod(mload(add(transcript, 0x700)), 12089728481927874653270109321696554369577029054799049811512493067836469281428, f_q))
mstore(add(transcript, 0x1100), mulmod(mload(add(transcript, 0xfe0)), 5857228514216831962358810454360739186987616060007133076514874820078026801648, f_q))
mstore(add(transcript, 0x1120), addmod(mload(add(transcript, 0x700)), 16031014357622443259887595290896535901560748340408901267183329366497781693969, f_q))
mstore(add(transcript, 0x1140), mulmod(mload(add(transcript, 0xfe0)), 11402394834529375719535454173347509224290498423785625657829583372803806900475, f_q))
mstore(add(transcript, 0x1160), addmod(mload(add(transcript, 0x700)), 10485848037309899502710951571909765864257865976630408685868620813772001595142, f_q))
mstore(add(transcript, 0x1180), mulmod(mload(add(transcript, 0xfe0)), 1, f_q))
mstore(add(transcript, 0x11a0), addmod(mload(add(transcript, 0x700)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))
mstore(add(transcript, 0x11c0), mulmod(mload(add(transcript, 0xfe0)), 21846745818185811051373434299876022191132089169516983080959277716660228899818, f_q))
mstore(add(transcript, 0x11e0), addmod(mload(add(transcript, 0x700)), 41497053653464170872971445381252897416275230899051262738926469915579595799, f_q))
mstore(add(transcript, 0x1200), mulmod(mload(add(transcript, 0xfe0)), 4443263508319656594054352481848447997537391617204595126809744742387004492585, f_q))
mstore(add(transcript, 0x1220), addmod(mload(add(transcript, 0x700)), 17444979363519618628192053263408827091010972783211439216888459444188804003032, f_q))
{
            let prod := mload(add(transcript, 0x1020))

                prod := mulmod(mload(add(transcript, 0x1060)), prod, f_q)
                mstore(add(transcript, 0x1240), prod)
            
                prod := mulmod(mload(add(transcript, 0x10a0)), prod, f_q)
                mstore(add(transcript, 0x1260), prod)
            
                prod := mulmod(mload(add(transcript, 0x10e0)), prod, f_q)
                mstore(add(transcript, 0x1280), prod)
            
                prod := mulmod(mload(add(transcript, 0x1120)), prod, f_q)
                mstore(add(transcript, 0x12a0), prod)
            
                prod := mulmod(mload(add(transcript, 0x1160)), prod, f_q)
                mstore(add(transcript, 0x12c0), prod)
            
                prod := mulmod(mload(add(transcript, 0x11a0)), prod, f_q)
                mstore(add(transcript, 0x12e0), prod)
            
                prod := mulmod(mload(add(transcript, 0x11e0)), prod, f_q)
                mstore(add(transcript, 0x1300), prod)
            
                prod := mulmod(mload(add(transcript, 0x1220)), prod, f_q)
                mstore(add(transcript, 0x1320), prod)
            
                prod := mulmod(mload(add(transcript, 0xfc0)), prod, f_q)
                mstore(add(transcript, 0x1340), prod)
            
        }
mstore(add(transcript, 0x1380), 32)
mstore(add(transcript, 0x13a0), 32)
mstore(add(transcript, 0x13c0), 32)
mstore(add(transcript, 0x13e0), mload(add(transcript, 0x1340)))
mstore(add(transcript, 0x1400), 21888242871839275222246405745257275088548364400416034343698204186575808495615)
mstore(add(transcript, 0x1420), 21888242871839275222246405745257275088548364400416034343698204186575808495617)
success := and(eq(staticcall(gas(), 0x5, add(transcript, 0x1380), 0xc0, add(transcript, 0x1360), 0x20), 1), success)
{
            
            let inv := mload(add(transcript, 0x1360))
            let v
        
                    v := mload(add(transcript, 0xfc0))
                    mstore(add(transcript, 0xfc0), mulmod(mload(add(transcript, 0x1320)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x1220))
                    mstore(add(transcript, 0x1220), mulmod(mload(add(transcript, 0x1300)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x11e0))
                    mstore(add(transcript, 0x11e0), mulmod(mload(add(transcript, 0x12e0)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x11a0))
                    mstore(add(transcript, 0x11a0), mulmod(mload(add(transcript, 0x12c0)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x1160))
                    mstore(add(transcript, 0x1160), mulmod(mload(add(transcript, 0x12a0)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x1120))
                    mstore(add(transcript, 0x1120), mulmod(mload(add(transcript, 0x1280)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x10e0))
                    mstore(add(transcript, 0x10e0), mulmod(mload(add(transcript, 0x1260)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x10a0))
                    mstore(add(transcript, 0x10a0), mulmod(mload(add(transcript, 0x1240)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                
                    v := mload(add(transcript, 0x1060))
                    mstore(add(transcript, 0x1060), mulmod(mload(add(transcript, 0x1020)), inv, f_q))
                    inv := mulmod(v, inv, f_q)
                mstore(add(transcript, 0x1020), inv)

        }
mstore(add(transcript, 0x1440), mulmod(mload(add(transcript, 0x1000)), mload(add(transcript, 0x1020)), f_q))
mstore(add(transcript, 0x1460), mulmod(mload(add(transcript, 0x1040)), mload(add(transcript, 0x1060)), f_q))
mstore(add(transcript, 0x1480), mulmod(mload(add(transcript, 0x1080)), mload(add(transcript, 0x10a0)), f_q))
mstore(add(transcript, 0x14a0), mulmod(mload(add(transcript, 0x10c0)), mload(add(transcript, 0x10e0)), f_q))
mstore(add(transcript, 0x14c0), mulmod(mload(add(transcript, 0x1100)), mload(add(transcript, 0x1120)), f_q))
mstore(add(transcript, 0x14e0), mulmod(mload(add(transcript, 0x1140)), mload(add(transcript, 0x1160)), f_q))
mstore(add(transcript, 0x1500), mulmod(mload(add(transcript, 0x1180)), mload(add(transcript, 0x11a0)), f_q))
mstore(add(transcript, 0x1520), mulmod(mload(add(transcript, 0x11c0)), mload(add(transcript, 0x11e0)), f_q))
mstore(add(transcript, 0x1540), mulmod(mload(add(transcript, 0x1200)), mload(add(transcript, 0x1220)), f_q))
{
            let result := mulmod(mload(add(transcript, 0x1500)), mload(add(transcript, 0x20)), f_q)
result := addmod(mulmod(mload(add(transcript, 0x1520)), mload(add(transcript, 0x40)), f_q), result, f_q)
result := addmod(mulmod(mload(add(transcript, 0x1540)), mload(add(transcript, 0x60)), f_q), result, f_q)
mstore(add(transcript, 0x1560), result)
        }
{
            let result := mulmod(mload(add(transcript, 0x1500)), mload(add(transcript, 0x80)), f_q)
result := addmod(mulmod(mload(add(transcript, 0x1520)), mload(add(transcript, 0xa0)), f_q), result, f_q)
result := addmod(mulmod(mload(add(transcript, 0x1540)), mload(add(transcript, 0xc0)), f_q), result, f_q)
mstore(add(transcript, 0x1580), result)
        }
mstore(add(transcript, 0x15a0), addmod(mload(add(transcript, 0x740)), sub(f_q, mload(add(transcript, 0x760))), f_q))
mstore(add(transcript, 0x15c0), mulmod(mload(add(transcript, 0x15a0)), mload(add(transcript, 0x860)), f_q))
mstore(add(transcript, 0x15e0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x15c0)), f_q))
mstore(add(transcript, 0x1600), addmod(mload(add(transcript, 0x780)), sub(f_q, mload(add(transcript, 0x7a0))), f_q))
mstore(add(transcript, 0x1620), mulmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x860)), f_q))
mstore(add(transcript, 0x1640), addmod(mload(add(transcript, 0x15e0)), mload(add(transcript, 0x1620)), f_q))
mstore(add(transcript, 0x1660), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1640)), f_q))
mstore(add(transcript, 0x1680), addmod(mload(add(transcript, 0x7c0)), sub(f_q, mload(add(transcript, 0x7e0))), f_q))
mstore(add(transcript, 0x16a0), mulmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x860)), f_q))
mstore(add(transcript, 0x16c0), addmod(mload(add(transcript, 0x1660)), mload(add(transcript, 0x16a0)), f_q))
mstore(add(transcript, 0x16e0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x16c0)), f_q))
mstore(add(transcript, 0x1700), addmod(1, sub(f_q, mload(add(transcript, 0x920))), f_q))
mstore(add(transcript, 0x1720), mulmod(mload(add(transcript, 0x1700)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x1740), addmod(mload(add(transcript, 0x16e0)), mload(add(transcript, 0x1720)), f_q))
mstore(add(transcript, 0x1760), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x1780), mulmod(mload(add(transcript, 0x980)), mload(add(transcript, 0x980)), f_q))
mstore(add(transcript, 0x17a0), addmod(mload(add(transcript, 0x1780)), sub(f_q, mload(add(transcript, 0x980))), f_q))
mstore(add(transcript, 0x17c0), mulmod(mload(add(transcript, 0x17a0)), mload(add(transcript, 0x1440)), f_q))
mstore(add(transcript, 0x17e0), addmod(mload(add(transcript, 0x1760)), mload(add(transcript, 0x17c0)), f_q))
mstore(add(transcript, 0x1800), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x17e0)), f_q))
mstore(add(transcript, 0x1820), addmod(mload(add(transcript, 0x980)), sub(f_q, mload(add(transcript, 0x960))), f_q))
mstore(add(transcript, 0x1840), mulmod(mload(add(transcript, 0x1820)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x1860), addmod(mload(add(transcript, 0x1800)), mload(add(transcript, 0x1840)), f_q))
mstore(add(transcript, 0x1880), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1860)), f_q))
mstore(add(transcript, 0x18a0), addmod(1, sub(f_q, mload(add(transcript, 0x1440))), f_q))
mstore(add(transcript, 0x18c0), addmod(mload(add(transcript, 0x1460)), mload(add(transcript, 0x1480)), f_q))
mstore(add(transcript, 0x18e0), addmod(mload(add(transcript, 0x18c0)), mload(add(transcript, 0x14a0)), f_q))
mstore(add(transcript, 0x1900), addmod(mload(add(transcript, 0x18e0)), mload(add(transcript, 0x14c0)), f_q))
mstore(add(transcript, 0x1920), addmod(mload(add(transcript, 0x1900)), mload(add(transcript, 0x14e0)), f_q))
mstore(add(transcript, 0x1940), addmod(mload(add(transcript, 0x18a0)), sub(f_q, mload(add(transcript, 0x1920))), f_q))
mstore(add(transcript, 0x1960), mulmod(mload(add(transcript, 0x8a0)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1980), addmod(mload(add(transcript, 0x740)), mload(add(transcript, 0x1960)), f_q))
mstore(add(transcript, 0x19a0), addmod(mload(add(transcript, 0x1980)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x19c0), mulmod(mload(add(transcript, 0x8c0)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x19e0), addmod(mload(add(transcript, 0x760)), mload(add(transcript, 0x19c0)), f_q))
mstore(add(transcript, 0x1a00), addmod(mload(add(transcript, 0x19e0)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1a20), mulmod(mload(add(transcript, 0x1a00)), mload(add(transcript, 0x19a0)), f_q))
mstore(add(transcript, 0x1a40), mulmod(mload(add(transcript, 0x8e0)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1a60), addmod(mload(add(transcript, 0x1560)), mload(add(transcript, 0x1a40)), f_q))
mstore(add(transcript, 0x1a80), addmod(mload(add(transcript, 0x1a60)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1aa0), mulmod(mload(add(transcript, 0x1a80)), mload(add(transcript, 0x1a20)), f_q))
mstore(add(transcript, 0x1ac0), mulmod(mload(add(transcript, 0x1aa0)), mload(add(transcript, 0x940)), f_q))
mstore(add(transcript, 0x1ae0), mulmod(1, mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1b00), mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x1ae0)), f_q))
mstore(add(transcript, 0x1b20), addmod(mload(add(transcript, 0x740)), mload(add(transcript, 0x1b00)), f_q))
mstore(add(transcript, 0x1b40), addmod(mload(add(transcript, 0x1b20)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1b60), mulmod(4131629893567559867359510883348571134090853742863529169391034518566172092834, mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1b80), mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x1b60)), f_q))
mstore(add(transcript, 0x1ba0), addmod(mload(add(transcript, 0x760)), mload(add(transcript, 0x1b80)), f_q))
mstore(add(transcript, 0x1bc0), addmod(mload(add(transcript, 0x1ba0)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1be0), mulmod(mload(add(transcript, 0x1bc0)), mload(add(transcript, 0x1b40)), f_q))
mstore(add(transcript, 0x1c00), mulmod(8910878055287538404433155982483128285667088683464058436815641868457422632747, mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1c20), mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x1c00)), f_q))
mstore(add(transcript, 0x1c40), addmod(mload(add(transcript, 0x1560)), mload(add(transcript, 0x1c20)), f_q))
mstore(add(transcript, 0x1c60), addmod(mload(add(transcript, 0x1c40)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1c80), mulmod(mload(add(transcript, 0x1c60)), mload(add(transcript, 0x1be0)), f_q))
mstore(add(transcript, 0x1ca0), mulmod(mload(add(transcript, 0x1c80)), mload(add(transcript, 0x920)), f_q))
mstore(add(transcript, 0x1cc0), addmod(mload(add(transcript, 0x1ac0)), sub(f_q, mload(add(transcript, 0x1ca0))), f_q))
mstore(add(transcript, 0x1ce0), mulmod(mload(add(transcript, 0x1cc0)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x1d00), addmod(mload(add(transcript, 0x1880)), mload(add(transcript, 0x1ce0)), f_q))
mstore(add(transcript, 0x1d20), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1d00)), f_q))
mstore(add(transcript, 0x1d40), mulmod(mload(add(transcript, 0x900)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1d60), addmod(mload(add(transcript, 0x1580)), mload(add(transcript, 0x1d40)), f_q))
mstore(add(transcript, 0x1d80), addmod(mload(add(transcript, 0x1d60)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1da0), mulmod(mload(add(transcript, 0x1d80)), mload(add(transcript, 0x9a0)), f_q))
mstore(add(transcript, 0x1dc0), mulmod(11166246659983828508719468090013646171463329086121580628794302409516816350802, mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x1de0), mulmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x1dc0)), f_q))
mstore(add(transcript, 0x1e00), addmod(mload(add(transcript, 0x1580)), mload(add(transcript, 0x1de0)), f_q))
mstore(add(transcript, 0x1e20), addmod(mload(add(transcript, 0x1e00)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x1e40), mulmod(mload(add(transcript, 0x1e20)), mload(add(transcript, 0x980)), f_q))
mstore(add(transcript, 0x1e60), addmod(mload(add(transcript, 0x1da0)), sub(f_q, mload(add(transcript, 0x1e40))), f_q))
mstore(add(transcript, 0x1e80), mulmod(mload(add(transcript, 0x1e60)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x1ea0), addmod(mload(add(transcript, 0x1d20)), mload(add(transcript, 0x1e80)), f_q))
mstore(add(transcript, 0x1ec0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1ea0)), f_q))
mstore(add(transcript, 0x1ee0), addmod(1, sub(f_q, mload(add(transcript, 0x9c0))), f_q))
mstore(add(transcript, 0x1f00), mulmod(mload(add(transcript, 0x1ee0)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x1f20), addmod(mload(add(transcript, 0x1ec0)), mload(add(transcript, 0x1f00)), f_q))
mstore(add(transcript, 0x1f40), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1f20)), f_q))
mstore(add(transcript, 0x1f60), mulmod(mload(add(transcript, 0x9c0)), mload(add(transcript, 0x9c0)), f_q))
mstore(add(transcript, 0x1f80), addmod(mload(add(transcript, 0x1f60)), sub(f_q, mload(add(transcript, 0x9c0))), f_q))
mstore(add(transcript, 0x1fa0), mulmod(mload(add(transcript, 0x1f80)), mload(add(transcript, 0x1440)), f_q))
mstore(add(transcript, 0x1fc0), addmod(mload(add(transcript, 0x1f40)), mload(add(transcript, 0x1fa0)), f_q))
mstore(add(transcript, 0x1fe0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x1fc0)), f_q))
mstore(add(transcript, 0x2000), addmod(mload(add(transcript, 0xa00)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x2020), mulmod(mload(add(transcript, 0x2000)), mload(add(transcript, 0x9e0)), f_q))
mstore(add(transcript, 0x2040), addmod(mload(add(transcript, 0xa40)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x2060), mulmod(mload(add(transcript, 0x2040)), mload(add(transcript, 0x2020)), f_q))
mstore(add(transcript, 0x2080), mulmod(mload(add(transcript, 0x740)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x20a0), addmod(1, sub(f_q, mload(add(transcript, 0x840))), f_q))
mstore(add(transcript, 0x20c0), mulmod(mload(add(transcript, 0x20a0)), 0, f_q))
mstore(add(transcript, 0x20e0), addmod(mload(add(transcript, 0x2080)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x2100), mulmod(mload(add(transcript, 0x180)), mload(add(transcript, 0x20e0)), f_q))
mstore(add(transcript, 0x2120), mulmod(mload(add(transcript, 0x760)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x2140), addmod(mload(add(transcript, 0x2120)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x2160), addmod(mload(add(transcript, 0x2100)), mload(add(transcript, 0x2140)), f_q))
mstore(add(transcript, 0x2180), addmod(mload(add(transcript, 0x2160)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x21a0), mulmod(mload(add(transcript, 0x2180)), mload(add(transcript, 0x9c0)), f_q))
mstore(add(transcript, 0x21c0), mulmod(mload(add(transcript, 0x180)), mload(add(transcript, 0x800)), f_q))
mstore(add(transcript, 0x21e0), addmod(mload(add(transcript, 0x21c0)), mload(add(transcript, 0x820)), f_q))
mstore(add(transcript, 0x2200), addmod(mload(add(transcript, 0x21e0)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x2220), mulmod(mload(add(transcript, 0x2200)), mload(add(transcript, 0x21a0)), f_q))
mstore(add(transcript, 0x2240), addmod(mload(add(transcript, 0x2060)), sub(f_q, mload(add(transcript, 0x2220))), f_q))
mstore(add(transcript, 0x2260), mulmod(mload(add(transcript, 0x2240)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x2280), addmod(mload(add(transcript, 0x1fe0)), mload(add(transcript, 0x2260)), f_q))
mstore(add(transcript, 0x22a0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2280)), f_q))
mstore(add(transcript, 0x22c0), addmod(mload(add(transcript, 0xa00)), sub(f_q, mload(add(transcript, 0xa40))), f_q))
mstore(add(transcript, 0x22e0), mulmod(mload(add(transcript, 0x22c0)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x2300), addmod(mload(add(transcript, 0x22a0)), mload(add(transcript, 0x22e0)), f_q))
mstore(add(transcript, 0x2320), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2300)), f_q))
mstore(add(transcript, 0x2340), mulmod(mload(add(transcript, 0x22c0)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x2360), addmod(mload(add(transcript, 0xa00)), sub(f_q, mload(add(transcript, 0xa20))), f_q))
mstore(add(transcript, 0x2380), mulmod(mload(add(transcript, 0x2360)), mload(add(transcript, 0x2340)), f_q))
mstore(add(transcript, 0x23a0), addmod(mload(add(transcript, 0x2320)), mload(add(transcript, 0x2380)), f_q))
mstore(add(transcript, 0x23c0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x23a0)), f_q))
mstore(add(transcript, 0x23e0), addmod(1, sub(f_q, mload(add(transcript, 0xa60))), f_q))
mstore(add(transcript, 0x2400), mulmod(mload(add(transcript, 0x23e0)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x2420), addmod(mload(add(transcript, 0x23c0)), mload(add(transcript, 0x2400)), f_q))
mstore(add(transcript, 0x2440), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2420)), f_q))
mstore(add(transcript, 0x2460), mulmod(mload(add(transcript, 0xa60)), mload(add(transcript, 0xa60)), f_q))
mstore(add(transcript, 0x2480), addmod(mload(add(transcript, 0x2460)), sub(f_q, mload(add(transcript, 0xa60))), f_q))
mstore(add(transcript, 0x24a0), mulmod(mload(add(transcript, 0x2480)), mload(add(transcript, 0x1440)), f_q))
mstore(add(transcript, 0x24c0), addmod(mload(add(transcript, 0x2440)), mload(add(transcript, 0x24a0)), f_q))
mstore(add(transcript, 0x24e0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x24c0)), f_q))
mstore(add(transcript, 0x2500), addmod(mload(add(transcript, 0xaa0)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x2520), mulmod(mload(add(transcript, 0x2500)), mload(add(transcript, 0xa80)), f_q))
mstore(add(transcript, 0x2540), addmod(mload(add(transcript, 0xae0)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x2560), mulmod(mload(add(transcript, 0x2540)), mload(add(transcript, 0x2520)), f_q))
mstore(add(transcript, 0x2580), mulmod(mload(add(transcript, 0x780)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x25a0), addmod(mload(add(transcript, 0x2580)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x25c0), mulmod(mload(add(transcript, 0x180)), mload(add(transcript, 0x25a0)), f_q))
mstore(add(transcript, 0x25e0), mulmod(mload(add(transcript, 0x7a0)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x2600), addmod(mload(add(transcript, 0x25e0)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x2620), addmod(mload(add(transcript, 0x25c0)), mload(add(transcript, 0x2600)), f_q))
mstore(add(transcript, 0x2640), addmod(mload(add(transcript, 0x2620)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x2660), mulmod(mload(add(transcript, 0x2640)), mload(add(transcript, 0xa60)), f_q))
mstore(add(transcript, 0x2680), mulmod(mload(add(transcript, 0x2200)), mload(add(transcript, 0x2660)), f_q))
mstore(add(transcript, 0x26a0), addmod(mload(add(transcript, 0x2560)), sub(f_q, mload(add(transcript, 0x2680))), f_q))
mstore(add(transcript, 0x26c0), mulmod(mload(add(transcript, 0x26a0)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x26e0), addmod(mload(add(transcript, 0x24e0)), mload(add(transcript, 0x26c0)), f_q))
mstore(add(transcript, 0x2700), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x26e0)), f_q))
mstore(add(transcript, 0x2720), addmod(mload(add(transcript, 0xaa0)), sub(f_q, mload(add(transcript, 0xae0))), f_q))
mstore(add(transcript, 0x2740), mulmod(mload(add(transcript, 0x2720)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x2760), addmod(mload(add(transcript, 0x2700)), mload(add(transcript, 0x2740)), f_q))
mstore(add(transcript, 0x2780), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2760)), f_q))
mstore(add(transcript, 0x27a0), mulmod(mload(add(transcript, 0x2720)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x27c0), addmod(mload(add(transcript, 0xaa0)), sub(f_q, mload(add(transcript, 0xac0))), f_q))
mstore(add(transcript, 0x27e0), mulmod(mload(add(transcript, 0x27c0)), mload(add(transcript, 0x27a0)), f_q))
mstore(add(transcript, 0x2800), addmod(mload(add(transcript, 0x2780)), mload(add(transcript, 0x27e0)), f_q))
mstore(add(transcript, 0x2820), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2800)), f_q))
mstore(add(transcript, 0x2840), addmod(1, sub(f_q, mload(add(transcript, 0xb00))), f_q))
mstore(add(transcript, 0x2860), mulmod(mload(add(transcript, 0x2840)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x2880), addmod(mload(add(transcript, 0x2820)), mload(add(transcript, 0x2860)), f_q))
mstore(add(transcript, 0x28a0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2880)), f_q))
mstore(add(transcript, 0x28c0), mulmod(mload(add(transcript, 0xb00)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x28e0), addmod(mload(add(transcript, 0x28c0)), sub(f_q, mload(add(transcript, 0xb00))), f_q))
mstore(add(transcript, 0x2900), mulmod(mload(add(transcript, 0x28e0)), mload(add(transcript, 0x1440)), f_q))
mstore(add(transcript, 0x2920), addmod(mload(add(transcript, 0x28a0)), mload(add(transcript, 0x2900)), f_q))
mstore(add(transcript, 0x2940), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2920)), f_q))
mstore(add(transcript, 0x2960), addmod(mload(add(transcript, 0xb40)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x2980), mulmod(mload(add(transcript, 0x2960)), mload(add(transcript, 0xb20)), f_q))
mstore(add(transcript, 0x29a0), addmod(mload(add(transcript, 0xb80)), mload(add(transcript, 0x3c0)), f_q))
mstore(add(transcript, 0x29c0), mulmod(mload(add(transcript, 0x29a0)), mload(add(transcript, 0x2980)), f_q))
mstore(add(transcript, 0x29e0), mulmod(mload(add(transcript, 0x7c0)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x2a00), addmod(mload(add(transcript, 0x29e0)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x2a20), mulmod(mload(add(transcript, 0x180)), mload(add(transcript, 0x2a00)), f_q))
mstore(add(transcript, 0x2a40), mulmod(mload(add(transcript, 0x7e0)), mload(add(transcript, 0x840)), f_q))
mstore(add(transcript, 0x2a60), addmod(mload(add(transcript, 0x2a40)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x2a80), addmod(mload(add(transcript, 0x2a20)), mload(add(transcript, 0x2a60)), f_q))
mstore(add(transcript, 0x2aa0), addmod(mload(add(transcript, 0x2a80)), mload(add(transcript, 0x360)), f_q))
mstore(add(transcript, 0x2ac0), mulmod(mload(add(transcript, 0x2aa0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x2ae0), mulmod(mload(add(transcript, 0x2200)), mload(add(transcript, 0x2ac0)), f_q))
mstore(add(transcript, 0x2b00), addmod(mload(add(transcript, 0x29c0)), sub(f_q, mload(add(transcript, 0x2ae0))), f_q))
mstore(add(transcript, 0x2b20), mulmod(mload(add(transcript, 0x2b00)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x2b40), addmod(mload(add(transcript, 0x2940)), mload(add(transcript, 0x2b20)), f_q))
mstore(add(transcript, 0x2b60), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2b40)), f_q))
mstore(add(transcript, 0x2b80), addmod(mload(add(transcript, 0xb40)), sub(f_q, mload(add(transcript, 0xb80))), f_q))
mstore(add(transcript, 0x2ba0), mulmod(mload(add(transcript, 0x2b80)), mload(add(transcript, 0x1500)), f_q))
mstore(add(transcript, 0x2bc0), addmod(mload(add(transcript, 0x2b60)), mload(add(transcript, 0x2ba0)), f_q))
mstore(add(transcript, 0x2be0), mulmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x2bc0)), f_q))
mstore(add(transcript, 0x2c00), mulmod(mload(add(transcript, 0x2b80)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x2c20), addmod(mload(add(transcript, 0xb40)), sub(f_q, mload(add(transcript, 0xb60))), f_q))
mstore(add(transcript, 0x2c40), mulmod(mload(add(transcript, 0x2c20)), mload(add(transcript, 0x2c00)), f_q))
mstore(add(transcript, 0x2c60), addmod(mload(add(transcript, 0x2be0)), mload(add(transcript, 0x2c40)), f_q))
mstore(add(transcript, 0x2c80), mulmod(mload(add(transcript, 0xfa0)), mload(add(transcript, 0xfa0)), f_q))
mstore(add(transcript, 0x2ca0), mulmod(mload(add(transcript, 0x2c80)), mload(add(transcript, 0xfa0)), f_q))
mstore(add(transcript, 0x2cc0), mulmod(mload(add(transcript, 0x2ca0)), mload(add(transcript, 0xfa0)), f_q))
mstore(add(transcript, 0x2ce0), mulmod(1, mload(add(transcript, 0xfa0)), f_q))
mstore(add(transcript, 0x2d00), mulmod(1, mload(add(transcript, 0x2c80)), f_q))
mstore(add(transcript, 0x2d20), mulmod(1, mload(add(transcript, 0x2ca0)), f_q))
mstore(add(transcript, 0x2d40), mulmod(mload(add(transcript, 0x2c60)), mload(add(transcript, 0xfc0)), f_q))
mstore(add(transcript, 0x2d60), mulmod(mload(add(transcript, 0xd60)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x2d80), mulmod(mload(add(transcript, 0x2d60)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x2da0), mulmod(mload(add(transcript, 0x2d80)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x2dc0), mulmod(mload(add(transcript, 0x2da0)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x2de0), mulmod(mload(add(transcript, 0xbc0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2e00), mulmod(mload(add(transcript, 0x2de0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2e20), mulmod(mload(add(transcript, 0x2e00)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2e40), mulmod(mload(add(transcript, 0x2e20)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2e60), mulmod(mload(add(transcript, 0x2e40)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2e80), mulmod(mload(add(transcript, 0x2e60)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2ea0), mulmod(mload(add(transcript, 0x2e80)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2ec0), mulmod(mload(add(transcript, 0x2ea0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2ee0), mulmod(mload(add(transcript, 0x2ec0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2f00), mulmod(mload(add(transcript, 0x2ee0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2f20), mulmod(mload(add(transcript, 0x2f00)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2f40), mulmod(mload(add(transcript, 0x2f20)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2f60), mulmod(mload(add(transcript, 0x2f40)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2f80), mulmod(mload(add(transcript, 0x2f60)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2fa0), mulmod(mload(add(transcript, 0x2f80)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2fc0), mulmod(mload(add(transcript, 0x2fa0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x2fe0), mulmod(mload(add(transcript, 0x2fc0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3000), mulmod(mload(add(transcript, 0x2fe0)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3020), mulmod(mload(add(transcript, 0x3000)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3040), mulmod(mload(add(transcript, 0x3020)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3060), mulmod(mload(add(transcript, 0x3040)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3080), mulmod(mload(add(transcript, 0x3060)), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x30a0), mulmod(sub(f_q, mload(add(transcript, 0x740))), 1, f_q))
mstore(add(transcript, 0x30c0), mulmod(sub(f_q, mload(add(transcript, 0x760))), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x30e0), mulmod(1, mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3100), addmod(mload(add(transcript, 0x30a0)), mload(add(transcript, 0x30c0)), f_q))
mstore(add(transcript, 0x3120), mulmod(sub(f_q, mload(add(transcript, 0x920))), mload(add(transcript, 0x2de0)), f_q))
mstore(add(transcript, 0x3140), mulmod(1, mload(add(transcript, 0x2de0)), f_q))
mstore(add(transcript, 0x3160), addmod(mload(add(transcript, 0x3100)), mload(add(transcript, 0x3120)), f_q))
mstore(add(transcript, 0x3180), mulmod(sub(f_q, mload(add(transcript, 0x980))), mload(add(transcript, 0x2e00)), f_q))
mstore(add(transcript, 0x31a0), mulmod(1, mload(add(transcript, 0x2e00)), f_q))
mstore(add(transcript, 0x31c0), addmod(mload(add(transcript, 0x3160)), mload(add(transcript, 0x3180)), f_q))
mstore(add(transcript, 0x31e0), mulmod(sub(f_q, mload(add(transcript, 0x9c0))), mload(add(transcript, 0x2e20)), f_q))
mstore(add(transcript, 0x3200), mulmod(1, mload(add(transcript, 0x2e20)), f_q))
mstore(add(transcript, 0x3220), addmod(mload(add(transcript, 0x31c0)), mload(add(transcript, 0x31e0)), f_q))
mstore(add(transcript, 0x3240), mulmod(sub(f_q, mload(add(transcript, 0xa00))), mload(add(transcript, 0x2e40)), f_q))
mstore(add(transcript, 0x3260), mulmod(1, mload(add(transcript, 0x2e40)), f_q))
mstore(add(transcript, 0x3280), addmod(mload(add(transcript, 0x3220)), mload(add(transcript, 0x3240)), f_q))
mstore(add(transcript, 0x32a0), mulmod(sub(f_q, mload(add(transcript, 0xa40))), mload(add(transcript, 0x2e60)), f_q))
mstore(add(transcript, 0x32c0), mulmod(1, mload(add(transcript, 0x2e60)), f_q))
mstore(add(transcript, 0x32e0), addmod(mload(add(transcript, 0x3280)), mload(add(transcript, 0x32a0)), f_q))
mstore(add(transcript, 0x3300), mulmod(sub(f_q, mload(add(transcript, 0xa60))), mload(add(transcript, 0x2e80)), f_q))
mstore(add(transcript, 0x3320), mulmod(1, mload(add(transcript, 0x2e80)), f_q))
mstore(add(transcript, 0x3340), addmod(mload(add(transcript, 0x32e0)), mload(add(transcript, 0x3300)), f_q))
mstore(add(transcript, 0x3360), mulmod(sub(f_q, mload(add(transcript, 0xaa0))), mload(add(transcript, 0x2ea0)), f_q))
mstore(add(transcript, 0x3380), mulmod(1, mload(add(transcript, 0x2ea0)), f_q))
mstore(add(transcript, 0x33a0), addmod(mload(add(transcript, 0x3340)), mload(add(transcript, 0x3360)), f_q))
mstore(add(transcript, 0x33c0), mulmod(sub(f_q, mload(add(transcript, 0xae0))), mload(add(transcript, 0x2ec0)), f_q))
mstore(add(transcript, 0x33e0), mulmod(1, mload(add(transcript, 0x2ec0)), f_q))
mstore(add(transcript, 0x3400), addmod(mload(add(transcript, 0x33a0)), mload(add(transcript, 0x33c0)), f_q))
mstore(add(transcript, 0x3420), mulmod(sub(f_q, mload(add(transcript, 0xb00))), mload(add(transcript, 0x2ee0)), f_q))
mstore(add(transcript, 0x3440), mulmod(1, mload(add(transcript, 0x2ee0)), f_q))
mstore(add(transcript, 0x3460), addmod(mload(add(transcript, 0x3400)), mload(add(transcript, 0x3420)), f_q))
mstore(add(transcript, 0x3480), mulmod(sub(f_q, mload(add(transcript, 0xb40))), mload(add(transcript, 0x2f00)), f_q))
mstore(add(transcript, 0x34a0), mulmod(1, mload(add(transcript, 0x2f00)), f_q))
mstore(add(transcript, 0x34c0), addmod(mload(add(transcript, 0x3460)), mload(add(transcript, 0x3480)), f_q))
mstore(add(transcript, 0x34e0), mulmod(sub(f_q, mload(add(transcript, 0xb80))), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x3500), mulmod(1, mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x3520), addmod(mload(add(transcript, 0x34c0)), mload(add(transcript, 0x34e0)), f_q))
mstore(add(transcript, 0x3540), mulmod(sub(f_q, mload(add(transcript, 0x800))), mload(add(transcript, 0x2f40)), f_q))
mstore(add(transcript, 0x3560), mulmod(1, mload(add(transcript, 0x2f40)), f_q))
mstore(add(transcript, 0x3580), addmod(mload(add(transcript, 0x3520)), mload(add(transcript, 0x3540)), f_q))
mstore(add(transcript, 0x35a0), mulmod(sub(f_q, mload(add(transcript, 0x820))), mload(add(transcript, 0x2f60)), f_q))
mstore(add(transcript, 0x35c0), mulmod(1, mload(add(transcript, 0x2f60)), f_q))
mstore(add(transcript, 0x35e0), addmod(mload(add(transcript, 0x3580)), mload(add(transcript, 0x35a0)), f_q))
mstore(add(transcript, 0x3600), mulmod(sub(f_q, mload(add(transcript, 0x840))), mload(add(transcript, 0x2f80)), f_q))
mstore(add(transcript, 0x3620), mulmod(1, mload(add(transcript, 0x2f80)), f_q))
mstore(add(transcript, 0x3640), addmod(mload(add(transcript, 0x35e0)), mload(add(transcript, 0x3600)), f_q))
mstore(add(transcript, 0x3660), mulmod(sub(f_q, mload(add(transcript, 0x860))), mload(add(transcript, 0x2fa0)), f_q))
mstore(add(transcript, 0x3680), mulmod(1, mload(add(transcript, 0x2fa0)), f_q))
mstore(add(transcript, 0x36a0), addmod(mload(add(transcript, 0x3640)), mload(add(transcript, 0x3660)), f_q))
mstore(add(transcript, 0x36c0), mulmod(sub(f_q, mload(add(transcript, 0x8a0))), mload(add(transcript, 0x2fc0)), f_q))
mstore(add(transcript, 0x36e0), mulmod(1, mload(add(transcript, 0x2fc0)), f_q))
mstore(add(transcript, 0x3700), addmod(mload(add(transcript, 0x36a0)), mload(add(transcript, 0x36c0)), f_q))
mstore(add(transcript, 0x3720), mulmod(sub(f_q, mload(add(transcript, 0x8c0))), mload(add(transcript, 0x2fe0)), f_q))
mstore(add(transcript, 0x3740), mulmod(1, mload(add(transcript, 0x2fe0)), f_q))
mstore(add(transcript, 0x3760), addmod(mload(add(transcript, 0x3700)), mload(add(transcript, 0x3720)), f_q))
mstore(add(transcript, 0x3780), mulmod(sub(f_q, mload(add(transcript, 0x8e0))), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x37a0), mulmod(1, mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x37c0), addmod(mload(add(transcript, 0x3760)), mload(add(transcript, 0x3780)), f_q))
mstore(add(transcript, 0x37e0), mulmod(sub(f_q, mload(add(transcript, 0x900))), mload(add(transcript, 0x3020)), f_q))
mstore(add(transcript, 0x3800), mulmod(1, mload(add(transcript, 0x3020)), f_q))
mstore(add(transcript, 0x3820), addmod(mload(add(transcript, 0x37c0)), mload(add(transcript, 0x37e0)), f_q))
mstore(add(transcript, 0x3840), mulmod(sub(f_q, mload(add(transcript, 0x2d40))), mload(add(transcript, 0x3040)), f_q))
mstore(add(transcript, 0x3860), mulmod(1, mload(add(transcript, 0x3040)), f_q))
mstore(add(transcript, 0x3880), mulmod(mload(add(transcript, 0x2ce0)), mload(add(transcript, 0x3040)), f_q))
mstore(add(transcript, 0x38a0), mulmod(mload(add(transcript, 0x2d00)), mload(add(transcript, 0x3040)), f_q))
mstore(add(transcript, 0x38c0), mulmod(mload(add(transcript, 0x2d20)), mload(add(transcript, 0x3040)), f_q))
mstore(add(transcript, 0x38e0), addmod(mload(add(transcript, 0x3820)), mload(add(transcript, 0x3840)), f_q))
mstore(add(transcript, 0x3900), mulmod(sub(f_q, mload(add(transcript, 0x880))), mload(add(transcript, 0x3060)), f_q))
mstore(add(transcript, 0x3920), mulmod(1, mload(add(transcript, 0x3060)), f_q))
mstore(add(transcript, 0x3940), addmod(mload(add(transcript, 0x38e0)), mload(add(transcript, 0x3900)), f_q))
mstore(add(transcript, 0x3960), mulmod(mload(add(transcript, 0x3940)), 1, f_q))
mstore(add(transcript, 0x3980), mulmod(mload(add(transcript, 0x30e0)), 1, f_q))
mstore(add(transcript, 0x39a0), mulmod(mload(add(transcript, 0x3140)), 1, f_q))
mstore(add(transcript, 0x39c0), mulmod(mload(add(transcript, 0x31a0)), 1, f_q))
mstore(add(transcript, 0x39e0), mulmod(mload(add(transcript, 0x3200)), 1, f_q))
mstore(add(transcript, 0x3a00), mulmod(mload(add(transcript, 0x3260)), 1, f_q))
mstore(add(transcript, 0x3a20), mulmod(mload(add(transcript, 0x32c0)), 1, f_q))
mstore(add(transcript, 0x3a40), mulmod(mload(add(transcript, 0x3320)), 1, f_q))
mstore(add(transcript, 0x3a60), mulmod(mload(add(transcript, 0x3380)), 1, f_q))
mstore(add(transcript, 0x3a80), mulmod(mload(add(transcript, 0x33e0)), 1, f_q))
mstore(add(transcript, 0x3aa0), mulmod(mload(add(transcript, 0x3440)), 1, f_q))
mstore(add(transcript, 0x3ac0), mulmod(mload(add(transcript, 0x34a0)), 1, f_q))
mstore(add(transcript, 0x3ae0), mulmod(mload(add(transcript, 0x3500)), 1, f_q))
mstore(add(transcript, 0x3b00), mulmod(mload(add(transcript, 0x3560)), 1, f_q))
mstore(add(transcript, 0x3b20), mulmod(mload(add(transcript, 0x35c0)), 1, f_q))
mstore(add(transcript, 0x3b40), mulmod(mload(add(transcript, 0x3620)), 1, f_q))
mstore(add(transcript, 0x3b60), mulmod(mload(add(transcript, 0x3680)), 1, f_q))
mstore(add(transcript, 0x3b80), mulmod(mload(add(transcript, 0x36e0)), 1, f_q))
mstore(add(transcript, 0x3ba0), mulmod(mload(add(transcript, 0x3740)), 1, f_q))
mstore(add(transcript, 0x3bc0), mulmod(mload(add(transcript, 0x37a0)), 1, f_q))
mstore(add(transcript, 0x3be0), mulmod(mload(add(transcript, 0x3800)), 1, f_q))
mstore(add(transcript, 0x3c00), mulmod(mload(add(transcript, 0x3860)), 1, f_q))
mstore(add(transcript, 0x3c20), mulmod(mload(add(transcript, 0x3880)), 1, f_q))
mstore(add(transcript, 0x3c40), mulmod(mload(add(transcript, 0x38a0)), 1, f_q))
mstore(add(transcript, 0x3c60), mulmod(mload(add(transcript, 0x38c0)), 1, f_q))
mstore(add(transcript, 0x3c80), mulmod(mload(add(transcript, 0x3920)), 1, f_q))
mstore(add(transcript, 0x3ca0), mulmod(sub(f_q, mload(add(transcript, 0x780))), 1, f_q))
mstore(add(transcript, 0x3cc0), mulmod(sub(f_q, mload(add(transcript, 0x7a0))), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x3ce0), addmod(mload(add(transcript, 0x3ca0)), mload(add(transcript, 0x3cc0)), f_q))
mstore(add(transcript, 0x3d00), mulmod(sub(f_q, mload(add(transcript, 0x940))), mload(add(transcript, 0x2de0)), f_q))
mstore(add(transcript, 0x3d20), addmod(mload(add(transcript, 0x3ce0)), mload(add(transcript, 0x3d00)), f_q))
mstore(add(transcript, 0x3d40), mulmod(sub(f_q, mload(add(transcript, 0x9a0))), mload(add(transcript, 0x2e00)), f_q))
mstore(add(transcript, 0x3d60), addmod(mload(add(transcript, 0x3d20)), mload(add(transcript, 0x3d40)), f_q))
mstore(add(transcript, 0x3d80), mulmod(sub(f_q, mload(add(transcript, 0x9e0))), mload(add(transcript, 0x2e20)), f_q))
mstore(add(transcript, 0x3da0), addmod(mload(add(transcript, 0x3d60)), mload(add(transcript, 0x3d80)), f_q))
mstore(add(transcript, 0x3dc0), mulmod(sub(f_q, mload(add(transcript, 0xa80))), mload(add(transcript, 0x2e40)), f_q))
mstore(add(transcript, 0x3de0), addmod(mload(add(transcript, 0x3da0)), mload(add(transcript, 0x3dc0)), f_q))
mstore(add(transcript, 0x3e00), mulmod(sub(f_q, mload(add(transcript, 0xb20))), mload(add(transcript, 0x2e60)), f_q))
mstore(add(transcript, 0x3e20), addmod(mload(add(transcript, 0x3de0)), mload(add(transcript, 0x3e00)), f_q))
mstore(add(transcript, 0x3e40), mulmod(mload(add(transcript, 0x3e20)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3e60), mulmod(1, mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3e80), mulmod(mload(add(transcript, 0x30e0)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3ea0), mulmod(mload(add(transcript, 0x3140)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3ec0), mulmod(mload(add(transcript, 0x31a0)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3ee0), mulmod(mload(add(transcript, 0x3200)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3f00), mulmod(mload(add(transcript, 0x3260)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3f20), mulmod(mload(add(transcript, 0x32c0)), mload(add(transcript, 0xd60)), f_q))
mstore(add(transcript, 0x3f40), addmod(mload(add(transcript, 0x3960)), mload(add(transcript, 0x3e40)), f_q))
mstore(add(transcript, 0x3f60), addmod(1, mload(add(transcript, 0x3e60)), f_q))
mstore(add(transcript, 0x3f80), addmod(mload(add(transcript, 0x3980)), mload(add(transcript, 0x3e80)), f_q))
mstore(add(transcript, 0x3fa0), addmod(mload(add(transcript, 0x39a0)), mload(add(transcript, 0x3ea0)), f_q))
mstore(add(transcript, 0x3fc0), addmod(mload(add(transcript, 0x39c0)), mload(add(transcript, 0x3ec0)), f_q))
mstore(add(transcript, 0x3fe0), addmod(mload(add(transcript, 0x39e0)), mload(add(transcript, 0x3ee0)), f_q))
mstore(add(transcript, 0x4000), addmod(mload(add(transcript, 0x3a40)), mload(add(transcript, 0x3f00)), f_q))
mstore(add(transcript, 0x4020), addmod(mload(add(transcript, 0x3aa0)), mload(add(transcript, 0x3f20)), f_q))
mstore(add(transcript, 0x4040), mulmod(sub(f_q, mload(add(transcript, 0x7c0))), 1, f_q))
mstore(add(transcript, 0x4060), mulmod(sub(f_q, mload(add(transcript, 0x7e0))), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x4080), addmod(mload(add(transcript, 0x4040)), mload(add(transcript, 0x4060)), f_q))
mstore(add(transcript, 0x40a0), mulmod(mload(add(transcript, 0x4080)), mload(add(transcript, 0x2d60)), f_q))
mstore(add(transcript, 0x40c0), mulmod(1, mload(add(transcript, 0x2d60)), f_q))
mstore(add(transcript, 0x40e0), mulmod(mload(add(transcript, 0x30e0)), mload(add(transcript, 0x2d60)), f_q))
mstore(add(transcript, 0x4100), addmod(mload(add(transcript, 0x3f40)), mload(add(transcript, 0x40a0)), f_q))
mstore(add(transcript, 0x4120), addmod(mload(add(transcript, 0x3f60)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x4140), addmod(mload(add(transcript, 0x3f80)), mload(add(transcript, 0x40e0)), f_q))
mstore(add(transcript, 0x4160), mulmod(sub(f_q, mload(add(transcript, 0x960))), 1, f_q))
mstore(add(transcript, 0x4180), mulmod(mload(add(transcript, 0x4160)), mload(add(transcript, 0x2d80)), f_q))
mstore(add(transcript, 0x41a0), mulmod(1, mload(add(transcript, 0x2d80)), f_q))
mstore(add(transcript, 0x41c0), addmod(mload(add(transcript, 0x4100)), mload(add(transcript, 0x4180)), f_q))
mstore(add(transcript, 0x41e0), addmod(mload(add(transcript, 0x3fa0)), mload(add(transcript, 0x41a0)), f_q))
mstore(add(transcript, 0x4200), mulmod(sub(f_q, mload(add(transcript, 0xa20))), 1, f_q))
mstore(add(transcript, 0x4220), mulmod(sub(f_q, mload(add(transcript, 0xac0))), mload(add(transcript, 0xbc0)), f_q))
mstore(add(transcript, 0x4240), addmod(mload(add(transcript, 0x4200)), mload(add(transcript, 0x4220)), f_q))
mstore(add(transcript, 0x4260), mulmod(sub(f_q, mload(add(transcript, 0xb60))), mload(add(transcript, 0x2de0)), f_q))
mstore(add(transcript, 0x4280), addmod(mload(add(transcript, 0x4240)), mload(add(transcript, 0x4260)), f_q))
mstore(add(transcript, 0x42a0), mulmod(mload(add(transcript, 0x4280)), mload(add(transcript, 0x2da0)), f_q))
mstore(add(transcript, 0x42c0), mulmod(1, mload(add(transcript, 0x2da0)), f_q))
mstore(add(transcript, 0x42e0), mulmod(mload(add(transcript, 0x30e0)), mload(add(transcript, 0x2da0)), f_q))
mstore(add(transcript, 0x4300), mulmod(mload(add(transcript, 0x3140)), mload(add(transcript, 0x2da0)), f_q))
mstore(add(transcript, 0x4320), addmod(mload(add(transcript, 0x41c0)), mload(add(transcript, 0x42a0)), f_q))
mstore(add(transcript, 0x4340), addmod(mload(add(transcript, 0x3a00)), mload(add(transcript, 0x42c0)), f_q))
mstore(add(transcript, 0x4360), addmod(mload(add(transcript, 0x3a60)), mload(add(transcript, 0x42e0)), f_q))
mstore(add(transcript, 0x4380), addmod(mload(add(transcript, 0x3ac0)), mload(add(transcript, 0x4300)), f_q))
mstore(add(transcript, 0x43a0), mulmod(1, mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0x43c0), mulmod(1, mload(add(transcript, 0x43a0)), f_q))
mstore(add(transcript, 0x43e0), mulmod(21846745818185811051373434299876022191132089169516983080959277716660228899818, mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0x4400), mulmod(mload(add(transcript, 0x3e60)), mload(add(transcript, 0x43e0)), f_q))
mstore(add(transcript, 0x4420), mulmod(4443263508319656594054352481848447997537391617204595126809744742387004492585, mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0x4440), mulmod(mload(add(transcript, 0x40c0)), mload(add(transcript, 0x4420)), f_q))
mstore(add(transcript, 0x4460), mulmod(18801136258871406524726641978934912926273987048785013233465874845411408769764, mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0x4480), mulmod(mload(add(transcript, 0x41a0)), mload(add(transcript, 0x4460)), f_q))
mstore(add(transcript, 0x44a0), mulmod(11402394834529375719535454173347509224290498423785625657829583372803806900475, mload(add(transcript, 0x700)), f_q))
mstore(add(transcript, 0x44c0), mulmod(mload(add(transcript, 0x42c0)), mload(add(transcript, 0x44a0)), f_q))
mstore(add(transcript, 0x44e0), 0x0000000000000000000000000000000000000000000000000000000000000001)
                    mstore(add(transcript, 0x4500), 0x0000000000000000000000000000000000000000000000000000000000000002)
mstore(add(transcript, 0x4520), mload(add(transcript, 0x4320)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x44e0), 0x60, add(transcript, 0x44e0), 0x40), 1), success)
mstore(add(transcript, 0x4540), mload(add(transcript, 0xe0)))
                    mstore(add(transcript, 0x4560), mload(add(transcript, 0x100)))
mstore(add(transcript, 0x4580), mload(add(transcript, 0x4120)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4540), 0x60, add(transcript, 0x4540), 0x40), 1), success)
mstore(add(transcript, 0x45a0), mload(add(transcript, 0x44e0)))
                    mstore(add(transcript, 0x45c0), mload(add(transcript, 0x4500)))
mstore(add(transcript, 0x45e0), mload(add(transcript, 0x4540)))
                    mstore(add(transcript, 0x4600), mload(add(transcript, 0x4560)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x45a0), 0x80, add(transcript, 0x45a0), 0x40), 1), success)
mstore(add(transcript, 0x4620), mload(add(transcript, 0x120)))
                    mstore(add(transcript, 0x4640), mload(add(transcript, 0x140)))
mstore(add(transcript, 0x4660), mload(add(transcript, 0x4140)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4620), 0x60, add(transcript, 0x4620), 0x40), 1), success)
mstore(add(transcript, 0x4680), mload(add(transcript, 0x45a0)))
                    mstore(add(transcript, 0x46a0), mload(add(transcript, 0x45c0)))
mstore(add(transcript, 0x46c0), mload(add(transcript, 0x4620)))
                    mstore(add(transcript, 0x46e0), mload(add(transcript, 0x4640)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4680), 0x80, add(transcript, 0x4680), 0x40), 1), success)
mstore(add(transcript, 0x4700), mload(add(transcript, 0x400)))
                    mstore(add(transcript, 0x4720), mload(add(transcript, 0x420)))
mstore(add(transcript, 0x4740), mload(add(transcript, 0x41e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4700), 0x60, add(transcript, 0x4700), 0x40), 1), success)
mstore(add(transcript, 0x4760), mload(add(transcript, 0x4680)))
                    mstore(add(transcript, 0x4780), mload(add(transcript, 0x46a0)))
mstore(add(transcript, 0x47a0), mload(add(transcript, 0x4700)))
                    mstore(add(transcript, 0x47c0), mload(add(transcript, 0x4720)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4760), 0x80, add(transcript, 0x4760), 0x40), 1), success)
mstore(add(transcript, 0x47e0), mload(add(transcript, 0x440)))
                    mstore(add(transcript, 0x4800), mload(add(transcript, 0x460)))
mstore(add(transcript, 0x4820), mload(add(transcript, 0x3fc0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x47e0), 0x60, add(transcript, 0x47e0), 0x40), 1), success)
mstore(add(transcript, 0x4840), mload(add(transcript, 0x4760)))
                    mstore(add(transcript, 0x4860), mload(add(transcript, 0x4780)))
mstore(add(transcript, 0x4880), mload(add(transcript, 0x47e0)))
                    mstore(add(transcript, 0x48a0), mload(add(transcript, 0x4800)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4840), 0x80, add(transcript, 0x4840), 0x40), 1), success)
mstore(add(transcript, 0x48c0), mload(add(transcript, 0x480)))
                    mstore(add(transcript, 0x48e0), mload(add(transcript, 0x4a0)))
mstore(add(transcript, 0x4900), mload(add(transcript, 0x3fe0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x48c0), 0x60, add(transcript, 0x48c0), 0x40), 1), success)
mstore(add(transcript, 0x4920), mload(add(transcript, 0x4840)))
                    mstore(add(transcript, 0x4940), mload(add(transcript, 0x4860)))
mstore(add(transcript, 0x4960), mload(add(transcript, 0x48c0)))
                    mstore(add(transcript, 0x4980), mload(add(transcript, 0x48e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4920), 0x80, add(transcript, 0x4920), 0x40), 1), success)
mstore(add(transcript, 0x49a0), mload(add(transcript, 0x1c0)))
                    mstore(add(transcript, 0x49c0), mload(add(transcript, 0x1e0)))
mstore(add(transcript, 0x49e0), mload(add(transcript, 0x4340)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x49a0), 0x60, add(transcript, 0x49a0), 0x40), 1), success)
mstore(add(transcript, 0x4a00), mload(add(transcript, 0x4920)))
                    mstore(add(transcript, 0x4a20), mload(add(transcript, 0x4940)))
mstore(add(transcript, 0x4a40), mload(add(transcript, 0x49a0)))
                    mstore(add(transcript, 0x4a60), mload(add(transcript, 0x49c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4a00), 0x80, add(transcript, 0x4a00), 0x40), 1), success)
mstore(add(transcript, 0x4a80), mload(add(transcript, 0x200)))
                    mstore(add(transcript, 0x4aa0), mload(add(transcript, 0x220)))
mstore(add(transcript, 0x4ac0), mload(add(transcript, 0x3a20)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4a80), 0x60, add(transcript, 0x4a80), 0x40), 1), success)
mstore(add(transcript, 0x4ae0), mload(add(transcript, 0x4a00)))
                    mstore(add(transcript, 0x4b00), mload(add(transcript, 0x4a20)))
mstore(add(transcript, 0x4b20), mload(add(transcript, 0x4a80)))
                    mstore(add(transcript, 0x4b40), mload(add(transcript, 0x4aa0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4ae0), 0x80, add(transcript, 0x4ae0), 0x40), 1), success)
mstore(add(transcript, 0x4b60), mload(add(transcript, 0x4c0)))
                    mstore(add(transcript, 0x4b80), mload(add(transcript, 0x4e0)))
mstore(add(transcript, 0x4ba0), mload(add(transcript, 0x4000)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4b60), 0x60, add(transcript, 0x4b60), 0x40), 1), success)
mstore(add(transcript, 0x4bc0), mload(add(transcript, 0x4ae0)))
                    mstore(add(transcript, 0x4be0), mload(add(transcript, 0x4b00)))
mstore(add(transcript, 0x4c00), mload(add(transcript, 0x4b60)))
                    mstore(add(transcript, 0x4c20), mload(add(transcript, 0x4b80)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4bc0), 0x80, add(transcript, 0x4bc0), 0x40), 1), success)
mstore(add(transcript, 0x4c40), mload(add(transcript, 0x240)))
                    mstore(add(transcript, 0x4c60), mload(add(transcript, 0x260)))
mstore(add(transcript, 0x4c80), mload(add(transcript, 0x4360)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4c40), 0x60, add(transcript, 0x4c40), 0x40), 1), success)
mstore(add(transcript, 0x4ca0), mload(add(transcript, 0x4bc0)))
                    mstore(add(transcript, 0x4cc0), mload(add(transcript, 0x4be0)))
mstore(add(transcript, 0x4ce0), mload(add(transcript, 0x4c40)))
                    mstore(add(transcript, 0x4d00), mload(add(transcript, 0x4c60)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4ca0), 0x80, add(transcript, 0x4ca0), 0x40), 1), success)
mstore(add(transcript, 0x4d20), mload(add(transcript, 0x280)))
                    mstore(add(transcript, 0x4d40), mload(add(transcript, 0x2a0)))
mstore(add(transcript, 0x4d60), mload(add(transcript, 0x3a80)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4d20), 0x60, add(transcript, 0x4d20), 0x40), 1), success)
mstore(add(transcript, 0x4d80), mload(add(transcript, 0x4ca0)))
                    mstore(add(transcript, 0x4da0), mload(add(transcript, 0x4cc0)))
mstore(add(transcript, 0x4dc0), mload(add(transcript, 0x4d20)))
                    mstore(add(transcript, 0x4de0), mload(add(transcript, 0x4d40)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4d80), 0x80, add(transcript, 0x4d80), 0x40), 1), success)
mstore(add(transcript, 0x4e00), mload(add(transcript, 0x500)))
                    mstore(add(transcript, 0x4e20), mload(add(transcript, 0x520)))
mstore(add(transcript, 0x4e40), mload(add(transcript, 0x4020)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4e00), 0x60, add(transcript, 0x4e00), 0x40), 1), success)
mstore(add(transcript, 0x4e60), mload(add(transcript, 0x4d80)))
                    mstore(add(transcript, 0x4e80), mload(add(transcript, 0x4da0)))
mstore(add(transcript, 0x4ea0), mload(add(transcript, 0x4e00)))
                    mstore(add(transcript, 0x4ec0), mload(add(transcript, 0x4e20)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4e60), 0x80, add(transcript, 0x4e60), 0x40), 1), success)
mstore(add(transcript, 0x4ee0), mload(add(transcript, 0x2c0)))
                    mstore(add(transcript, 0x4f00), mload(add(transcript, 0x2e0)))
mstore(add(transcript, 0x4f20), mload(add(transcript, 0x4380)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4ee0), 0x60, add(transcript, 0x4ee0), 0x40), 1), success)
mstore(add(transcript, 0x4f40), mload(add(transcript, 0x4e60)))
                    mstore(add(transcript, 0x4f60), mload(add(transcript, 0x4e80)))
mstore(add(transcript, 0x4f80), mload(add(transcript, 0x4ee0)))
                    mstore(add(transcript, 0x4fa0), mload(add(transcript, 0x4f00)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4f40), 0x80, add(transcript, 0x4f40), 0x40), 1), success)
mstore(add(transcript, 0x4fc0), mload(add(transcript, 0x300)))
                    mstore(add(transcript, 0x4fe0), mload(add(transcript, 0x320)))
mstore(add(transcript, 0x5000), mload(add(transcript, 0x3ae0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4fc0), 0x60, add(transcript, 0x4fc0), 0x40), 1), success)
mstore(add(transcript, 0x5020), mload(add(transcript, 0x4f40)))
                    mstore(add(transcript, 0x5040), mload(add(transcript, 0x4f60)))
mstore(add(transcript, 0x5060), mload(add(transcript, 0x4fc0)))
                    mstore(add(transcript, 0x5080), mload(add(transcript, 0x4fe0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5020), 0x80, add(transcript, 0x5020), 0x40), 1), success)
mstore(add(transcript, 0x50a0), 0x203a56a36b74080f5dabb9007bf703f697f3091eb21d27361611dd11f566bcb7)
                    mstore(add(transcript, 0x50c0), 0x2637aac69dbd52c3b1e7e9ad99082f78d2a5f266ceac8f0cdbe6b7eb7b8c9f35)
mstore(add(transcript, 0x50e0), mload(add(transcript, 0x3b00)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x50a0), 0x60, add(transcript, 0x50a0), 0x40), 1), success)
mstore(add(transcript, 0x5100), mload(add(transcript, 0x5020)))
                    mstore(add(transcript, 0x5120), mload(add(transcript, 0x5040)))
mstore(add(transcript, 0x5140), mload(add(transcript, 0x50a0)))
                    mstore(add(transcript, 0x5160), mload(add(transcript, 0x50c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5100), 0x80, add(transcript, 0x5100), 0x40), 1), success)
mstore(add(transcript, 0x5180), 0x10efbde2a9747d1ffa8e70c88e536456fd09a4a0025e72f3a153dd2f383dc7c6)
                    mstore(add(transcript, 0x51a0), 0x20edf3bda9153d9b94b6e8f0cb512fae6cea03b5b4ae81f3508c25960cc5acfe)
mstore(add(transcript, 0x51c0), mload(add(transcript, 0x3b20)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5180), 0x60, add(transcript, 0x5180), 0x40), 1), success)
mstore(add(transcript, 0x51e0), mload(add(transcript, 0x5100)))
                    mstore(add(transcript, 0x5200), mload(add(transcript, 0x5120)))
mstore(add(transcript, 0x5220), mload(add(transcript, 0x5180)))
                    mstore(add(transcript, 0x5240), mload(add(transcript, 0x51a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x51e0), 0x80, add(transcript, 0x51e0), 0x40), 1), success)
mstore(add(transcript, 0x5260), 0x038cec3084e07df5ef26d71e09e3b4ed7977de7025ad88638f1ab020c6db288d)
                    mstore(add(transcript, 0x5280), 0x155ea1388b96e90ccebb6e54daa8da3cbdb0f0dc3f611f73e9b62a7d5df5b6b4)
mstore(add(transcript, 0x52a0), mload(add(transcript, 0x3b40)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5260), 0x60, add(transcript, 0x5260), 0x40), 1), success)
mstore(add(transcript, 0x52c0), mload(add(transcript, 0x51e0)))
                    mstore(add(transcript, 0x52e0), mload(add(transcript, 0x5200)))
mstore(add(transcript, 0x5300), mload(add(transcript, 0x5260)))
                    mstore(add(transcript, 0x5320), mload(add(transcript, 0x5280)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x52c0), 0x80, add(transcript, 0x52c0), 0x40), 1), success)
mstore(add(transcript, 0x5340), 0x1e63dcccd1f5a27f2a06f9ba0b662104fd8adff0769c64f71a44a35296c6f207)
                    mstore(add(transcript, 0x5360), 0x1914342996402dbf9a34ef0bcc116c66ccdf1f26909110cc22582d5df9382950)
mstore(add(transcript, 0x5380), mload(add(transcript, 0x3b60)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5340), 0x60, add(transcript, 0x5340), 0x40), 1), success)
mstore(add(transcript, 0x53a0), mload(add(transcript, 0x52c0)))
                    mstore(add(transcript, 0x53c0), mload(add(transcript, 0x52e0)))
mstore(add(transcript, 0x53e0), mload(add(transcript, 0x5340)))
                    mstore(add(transcript, 0x5400), mload(add(transcript, 0x5360)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x53a0), 0x80, add(transcript, 0x53a0), 0x40), 1), success)
mstore(add(transcript, 0x5420), 0x2447e99124ad876f75532657751d13bfbf3fa3933a4942c8e46b7e08b329d05f)
                    mstore(add(transcript, 0x5440), 0x2826cf1b012d2a656289ad77537c2e59950976167081e4d2ecf5d530a8186ba3)
mstore(add(transcript, 0x5460), mload(add(transcript, 0x3b80)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5420), 0x60, add(transcript, 0x5420), 0x40), 1), success)
mstore(add(transcript, 0x5480), mload(add(transcript, 0x53a0)))
                    mstore(add(transcript, 0x54a0), mload(add(transcript, 0x53c0)))
mstore(add(transcript, 0x54c0), mload(add(transcript, 0x5420)))
                    mstore(add(transcript, 0x54e0), mload(add(transcript, 0x5440)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5480), 0x80, add(transcript, 0x5480), 0x40), 1), success)
mstore(add(transcript, 0x5500), 0x0b496dd01bb7b3b5eec2f16a5244980676775df5ec8c6c1179ebfbe2db6b3d41)
                    mstore(add(transcript, 0x5520), 0x25ba535f3094e0aa82d6498f728c0537d5ebcb2ab85db7bc3967dd14a600ff07)
mstore(add(transcript, 0x5540), mload(add(transcript, 0x3ba0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5500), 0x60, add(transcript, 0x5500), 0x40), 1), success)
mstore(add(transcript, 0x5560), mload(add(transcript, 0x5480)))
                    mstore(add(transcript, 0x5580), mload(add(transcript, 0x54a0)))
mstore(add(transcript, 0x55a0), mload(add(transcript, 0x5500)))
                    mstore(add(transcript, 0x55c0), mload(add(transcript, 0x5520)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5560), 0x80, add(transcript, 0x5560), 0x40), 1), success)
mstore(add(transcript, 0x55e0), 0x08be25f43da00a224ff9ce12b705b68575b62205091a546b3ab4fb3a1ea5a772)
                    mstore(add(transcript, 0x5600), 0x037e32f9c0392abdd15ddaac3153e588d4b9af37bb5b8575bd1f033910bd79d2)
mstore(add(transcript, 0x5620), mload(add(transcript, 0x3bc0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x55e0), 0x60, add(transcript, 0x55e0), 0x40), 1), success)
mstore(add(transcript, 0x5640), mload(add(transcript, 0x5560)))
                    mstore(add(transcript, 0x5660), mload(add(transcript, 0x5580)))
mstore(add(transcript, 0x5680), mload(add(transcript, 0x55e0)))
                    mstore(add(transcript, 0x56a0), mload(add(transcript, 0x5600)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5640), 0x80, add(transcript, 0x5640), 0x40), 1), success)
mstore(add(transcript, 0x56c0), 0x1e4db9e5b9e164b46ea71dce6077796e6e5f8e0b788fa64deea2185e449493f2)
                    mstore(add(transcript, 0x56e0), 0x09821a355d804ad21e2afb30f70ec4e77847071f9244240b00f903e0b13ecdf6)
mstore(add(transcript, 0x5700), mload(add(transcript, 0x3be0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x56c0), 0x60, add(transcript, 0x56c0), 0x40), 1), success)
mstore(add(transcript, 0x5720), mload(add(transcript, 0x5640)))
                    mstore(add(transcript, 0x5740), mload(add(transcript, 0x5660)))
mstore(add(transcript, 0x5760), mload(add(transcript, 0x56c0)))
                    mstore(add(transcript, 0x5780), mload(add(transcript, 0x56e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5720), 0x80, add(transcript, 0x5720), 0x40), 1), success)
mstore(add(transcript, 0x57a0), mload(add(transcript, 0x5e0)))
                    mstore(add(transcript, 0x57c0), mload(add(transcript, 0x600)))
mstore(add(transcript, 0x57e0), mload(add(transcript, 0x3c00)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x57a0), 0x60, add(transcript, 0x57a0), 0x40), 1), success)
mstore(add(transcript, 0x5800), mload(add(transcript, 0x5720)))
                    mstore(add(transcript, 0x5820), mload(add(transcript, 0x5740)))
mstore(add(transcript, 0x5840), mload(add(transcript, 0x57a0)))
                    mstore(add(transcript, 0x5860), mload(add(transcript, 0x57c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5800), 0x80, add(transcript, 0x5800), 0x40), 1), success)
mstore(add(transcript, 0x5880), mload(add(transcript, 0x620)))
                    mstore(add(transcript, 0x58a0), mload(add(transcript, 0x640)))
mstore(add(transcript, 0x58c0), mload(add(transcript, 0x3c20)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5880), 0x60, add(transcript, 0x5880), 0x40), 1), success)
mstore(add(transcript, 0x58e0), mload(add(transcript, 0x5800)))
                    mstore(add(transcript, 0x5900), mload(add(transcript, 0x5820)))
mstore(add(transcript, 0x5920), mload(add(transcript, 0x5880)))
                    mstore(add(transcript, 0x5940), mload(add(transcript, 0x58a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x58e0), 0x80, add(transcript, 0x58e0), 0x40), 1), success)
mstore(add(transcript, 0x5960), mload(add(transcript, 0x660)))
                    mstore(add(transcript, 0x5980), mload(add(transcript, 0x680)))
mstore(add(transcript, 0x59a0), mload(add(transcript, 0x3c40)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5960), 0x60, add(transcript, 0x5960), 0x40), 1), success)
mstore(add(transcript, 0x59c0), mload(add(transcript, 0x58e0)))
                    mstore(add(transcript, 0x59e0), mload(add(transcript, 0x5900)))
mstore(add(transcript, 0x5a00), mload(add(transcript, 0x5960)))
                    mstore(add(transcript, 0x5a20), mload(add(transcript, 0x5980)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x59c0), 0x80, add(transcript, 0x59c0), 0x40), 1), success)
mstore(add(transcript, 0x5a40), mload(add(transcript, 0x6a0)))
                    mstore(add(transcript, 0x5a60), mload(add(transcript, 0x6c0)))
mstore(add(transcript, 0x5a80), mload(add(transcript, 0x3c60)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5a40), 0x60, add(transcript, 0x5a40), 0x40), 1), success)
mstore(add(transcript, 0x5aa0), mload(add(transcript, 0x59c0)))
                    mstore(add(transcript, 0x5ac0), mload(add(transcript, 0x59e0)))
mstore(add(transcript, 0x5ae0), mload(add(transcript, 0x5a40)))
                    mstore(add(transcript, 0x5b00), mload(add(transcript, 0x5a60)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5aa0), 0x80, add(transcript, 0x5aa0), 0x40), 1), success)
mstore(add(transcript, 0x5b20), mload(add(transcript, 0x540)))
                    mstore(add(transcript, 0x5b40), mload(add(transcript, 0x560)))
mstore(add(transcript, 0x5b60), mload(add(transcript, 0x3c80)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5b20), 0x60, add(transcript, 0x5b20), 0x40), 1), success)
mstore(add(transcript, 0x5b80), mload(add(transcript, 0x5aa0)))
                    mstore(add(transcript, 0x5ba0), mload(add(transcript, 0x5ac0)))
mstore(add(transcript, 0x5bc0), mload(add(transcript, 0x5b20)))
                    mstore(add(transcript, 0x5be0), mload(add(transcript, 0x5b40)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5b80), 0x80, add(transcript, 0x5b80), 0x40), 1), success)
mstore(add(transcript, 0x5c00), mload(add(transcript, 0xc00)))
                    mstore(add(transcript, 0x5c20), mload(add(transcript, 0xc20)))
mstore(add(transcript, 0x5c40), mload(add(transcript, 0x43c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5c00), 0x60, add(transcript, 0x5c00), 0x40), 1), success)
mstore(add(transcript, 0x5c60), mload(add(transcript, 0x5b80)))
                    mstore(add(transcript, 0x5c80), mload(add(transcript, 0x5ba0)))
mstore(add(transcript, 0x5ca0), mload(add(transcript, 0x5c00)))
                    mstore(add(transcript, 0x5cc0), mload(add(transcript, 0x5c20)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5c60), 0x80, add(transcript, 0x5c60), 0x40), 1), success)
mstore(add(transcript, 0x5ce0), mload(add(transcript, 0xc40)))
                    mstore(add(transcript, 0x5d00), mload(add(transcript, 0xc60)))
mstore(add(transcript, 0x5d20), mload(add(transcript, 0x4400)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5ce0), 0x60, add(transcript, 0x5ce0), 0x40), 1), success)
mstore(add(transcript, 0x5d40), mload(add(transcript, 0x5c60)))
                    mstore(add(transcript, 0x5d60), mload(add(transcript, 0x5c80)))
mstore(add(transcript, 0x5d80), mload(add(transcript, 0x5ce0)))
                    mstore(add(transcript, 0x5da0), mload(add(transcript, 0x5d00)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5d40), 0x80, add(transcript, 0x5d40), 0x40), 1), success)
mstore(add(transcript, 0x5dc0), mload(add(transcript, 0xc80)))
                    mstore(add(transcript, 0x5de0), mload(add(transcript, 0xca0)))
mstore(add(transcript, 0x5e00), mload(add(transcript, 0x4440)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5dc0), 0x60, add(transcript, 0x5dc0), 0x40), 1), success)
mstore(add(transcript, 0x5e20), mload(add(transcript, 0x5d40)))
                    mstore(add(transcript, 0x5e40), mload(add(transcript, 0x5d60)))
mstore(add(transcript, 0x5e60), mload(add(transcript, 0x5dc0)))
                    mstore(add(transcript, 0x5e80), mload(add(transcript, 0x5de0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5e20), 0x80, add(transcript, 0x5e20), 0x40), 1), success)
mstore(add(transcript, 0x5ea0), mload(add(transcript, 0xcc0)))
                    mstore(add(transcript, 0x5ec0), mload(add(transcript, 0xce0)))
mstore(add(transcript, 0x5ee0), mload(add(transcript, 0x4480)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5ea0), 0x60, add(transcript, 0x5ea0), 0x40), 1), success)
mstore(add(transcript, 0x5f00), mload(add(transcript, 0x5e20)))
                    mstore(add(transcript, 0x5f20), mload(add(transcript, 0x5e40)))
mstore(add(transcript, 0x5f40), mload(add(transcript, 0x5ea0)))
                    mstore(add(transcript, 0x5f60), mload(add(transcript, 0x5ec0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5f00), 0x80, add(transcript, 0x5f00), 0x40), 1), success)
mstore(add(transcript, 0x5f80), mload(add(transcript, 0xd00)))
                    mstore(add(transcript, 0x5fa0), mload(add(transcript, 0xd20)))
mstore(add(transcript, 0x5fc0), mload(add(transcript, 0x44c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x5f80), 0x60, add(transcript, 0x5f80), 0x40), 1), success)
mstore(add(transcript, 0x5fe0), mload(add(transcript, 0x5f00)))
                    mstore(add(transcript, 0x6000), mload(add(transcript, 0x5f20)))
mstore(add(transcript, 0x6020), mload(add(transcript, 0x5f80)))
                    mstore(add(transcript, 0x6040), mload(add(transcript, 0x5fa0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x5fe0), 0x80, add(transcript, 0x5fe0), 0x40), 1), success)
mstore(add(transcript, 0x6060), mload(add(transcript, 0xc40)))
                    mstore(add(transcript, 0x6080), mload(add(transcript, 0xc60)))
mstore(add(transcript, 0x60a0), mload(add(transcript, 0x3e60)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6060), 0x60, add(transcript, 0x6060), 0x40), 1), success)
mstore(add(transcript, 0x60c0), mload(add(transcript, 0xc00)))
                    mstore(add(transcript, 0x60e0), mload(add(transcript, 0xc20)))
mstore(add(transcript, 0x6100), mload(add(transcript, 0x6060)))
                    mstore(add(transcript, 0x6120), mload(add(transcript, 0x6080)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x60c0), 0x80, add(transcript, 0x60c0), 0x40), 1), success)
mstore(add(transcript, 0x6140), mload(add(transcript, 0xc80)))
                    mstore(add(transcript, 0x6160), mload(add(transcript, 0xca0)))
mstore(add(transcript, 0x6180), mload(add(transcript, 0x40c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6140), 0x60, add(transcript, 0x6140), 0x40), 1), success)
mstore(add(transcript, 0x61a0), mload(add(transcript, 0x60c0)))
                    mstore(add(transcript, 0x61c0), mload(add(transcript, 0x60e0)))
mstore(add(transcript, 0x61e0), mload(add(transcript, 0x6140)))
                    mstore(add(transcript, 0x6200), mload(add(transcript, 0x6160)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x61a0), 0x80, add(transcript, 0x61a0), 0x40), 1), success)
mstore(add(transcript, 0x6220), mload(add(transcript, 0xcc0)))
                    mstore(add(transcript, 0x6240), mload(add(transcript, 0xce0)))
mstore(add(transcript, 0x6260), mload(add(transcript, 0x41a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6220), 0x60, add(transcript, 0x6220), 0x40), 1), success)
mstore(add(transcript, 0x6280), mload(add(transcript, 0x61a0)))
                    mstore(add(transcript, 0x62a0), mload(add(transcript, 0x61c0)))
mstore(add(transcript, 0x62c0), mload(add(transcript, 0x6220)))
                    mstore(add(transcript, 0x62e0), mload(add(transcript, 0x6240)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6280), 0x80, add(transcript, 0x6280), 0x40), 1), success)
mstore(add(transcript, 0x6300), mload(add(transcript, 0xd00)))
                    mstore(add(transcript, 0x6320), mload(add(transcript, 0xd20)))
mstore(add(transcript, 0x6340), mload(add(transcript, 0x42c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x6300), 0x60, add(transcript, 0x6300), 0x40), 1), success)
mstore(add(transcript, 0x6360), mload(add(transcript, 0x6280)))
                    mstore(add(transcript, 0x6380), mload(add(transcript, 0x62a0)))
mstore(add(transcript, 0x63a0), mload(add(transcript, 0x6300)))
                    mstore(add(transcript, 0x63c0), mload(add(transcript, 0x6320)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x6360), 0x80, add(transcript, 0x6360), 0x40), 1), success)
mstore(add(transcript, 0x63e0), mload(add(transcript, 0x5fe0)))
                    mstore(add(transcript, 0x6400), mload(add(transcript, 0x6000)))
mstore(add(transcript, 0x6420), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)
            mstore(add(transcript, 0x6440), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)
            mstore(add(transcript, 0x6460), 0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)
            mstore(add(transcript, 0x6480), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)
mstore(add(transcript, 0x64a0), mload(add(transcript, 0x6360)))
                    mstore(add(transcript, 0x64c0), mload(add(transcript, 0x6380)))
mstore(add(transcript, 0x64e0), 0x0a6ac6765a8d768d9e54762ff171ec02f335ec72d635d89986abe2e5c1b848a6)
            mstore(add(transcript, 0x6500), 0x1daba3d1008147dbb9ceaa51873947dbeeef4c7b5ed846d3103302bd8e8a4923)
            mstore(add(transcript, 0x6520), 0x26b2cb920af6d35d3595f2be94df8595d8eafab991b49906ddafc80051aa27e7)
            mstore(add(transcript, 0x6540), 0x051e0b2c036ca87a0345e70d455c0d7ddc5e70b6e55cf1251aabe6aef261f176)
success := and(eq(staticcall(gas(), 0x8, add(transcript, 0x63e0), 0x180, add(transcript, 0x63e0), 0x20), 1), success)
success := and(eq(mload(add(transcript, 0x63e0)), 1), success)
}
        return success;
    }
}
